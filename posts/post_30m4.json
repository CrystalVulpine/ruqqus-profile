{"author":{"banner_url":"/assets/images/profiles/default_bg.png","bio":"Goodbye. https://ruqqus.com/+The_Cabal/post/d9y9/i-told-you-so-all-the\r\n\r\nRemember: History repeats, and the unaware are doomed to repeat it.","bio_html":"<p>Goodbye. <a href=\"https://ruqqus.com/+The_Cabal/post/d9y9/i-told-you-so-all-the\" target=\"_blank\">https://ruqqus.com/+The_Cabal/post/d9y9/i-told-you-so-all-the</a></p>\n<p>Remember: History repeats, and the unaware are doomed to repeat it.</p>\n","created_utc":1590615852,"id":"3eb","is_banned":0,"is_premium":false,"is_private":true,"permalink":"/@CrystalVulpine","profile_url":"https://api.ruqqus.com/assets/images/profiles/default-profile-pic.png","title":null,"username":"CrystalVulpine"},"author_name":"CrystalVulpine","award_count":0,"body":"In C, the `restrict` keyword (and others such as `__restrict` by compiler extensions) indicates that a pointer doesn't alias with another, and as such it doesn't have to reload the value from memory every single time it's referenced.\r\n\r\nHowever, given that having aliasing/overlapping pointers is quite rare, I find myself marking nearly every pointer with `__restrict`. Instead, why not just have the restrict behavior by default, and an \"unrestrict\" qualifier in case pointers could alias? Better yet, specify *which* pointer(s) it could alias with, so they only have to reload the values with respect to each other?","body_html":"<p>In C, the <code>restrict</code> keyword (and others such as <code>__restrict</code> by compiler extensions) indicates that a pointer doesn't alias with another, and as such it doesn't have to reload the value from memory every single time it's referenced.</p>\n<p>However, given that having aliasing/overlapping pointers is quite rare, I find myself marking nearly every pointer with <code>__restrict</code>. Instead, why not just have the restrict behavior by default, and an \"unrestrict\" qualifier in case pointers could alias? Better yet, specify <em>which</em> pointer(s) it could alias with, so they only have to reload the values with respect to each other?</p>\n","comment_count":1,"created_utc":1599401096,"domain":"text post","downvotes":0,"edited_utc":0,"fullname":"t2_30m4","guild":{"banner_url":"https://i.ruqqus.com/board/programming/banner-17.png","color":"#044966","created_utc":1582928650,"description":"Back-end to front-end.\n\n---\nRelated guilds:\n\n+Webdev\n\n+Privacy\n\n+MachineLearning\n\n+Productivity\n\n+OpenSource","description_html":"<p>Back-end to front-end.</p>\n<hr/>\n<p>Related guilds:</p>\n<p><a href=\"/+Webdev\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Webdev/pic/profile\"/>+Webdev</a></p>\n<p><a href=\"/+Privacy\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Privacy/pic/profile\"/>+Privacy</a></p>\n<p><a href=\"/+MachineLearning\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+MachineLearning/pic/profile\"/>+MachineLearning</a></p>\n<p><a href=\"/+Productivity\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Productivity/pic/profile\"/>+Productivity</a></p>\n<p><a href=\"/+OpenSource\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+OpenSource/pic/profile\"/>+OpenSource</a></p>\n","disallowbots":false,"fullname":"t4_3i","id":"3i","is_banned":false,"is_private":false,"is_restricted":false,"is_siege_protected":false,"name":"Programming","over_18":false,"permalink":"/+Programming","profile_url":"https://i.ruqqus.com/board/programming/profile-10.png"},"guild_id":"3i","guild_name":"Programming","herald_guild":null,"id":"30m4","is_archived":true,"is_banned":false,"is_bot":false,"is_crosspost":false,"is_deleted":false,"is_distinguished":false,"is_heralded":false,"is_nsfl":false,"is_nsfw":false,"is_offensive":false,"is_pinned":false,"meta_description":null,"meta_title":null,"original_guild":null,"original_guild_id":null,"original_guild_name":null,"permalink":"/+Programming/post/30m4/why-isnt-restrict-the-default-for","score":1,"thumb_url":null,"title":"Why isn't restrict the default for pointers?","upvotes":1,"url":"","voted":0}
{"author":{"banner_url":"/assets/images/profiles/default_bg.png","bio":"","bio_html":"","created_utc":1593507996,"id":"el5","is_banned":0,"is_premium":false,"is_private":true,"permalink":"/@Boring_Wizard","profile_url":"https://api.ruqqus.com/assets/images/profiles/default-profile-pic.png","title":null,"username":"Boring_Wizard"},"author_name":"Boring_Wizard","award_count":0,"body":"Too low level, implementation specific, undefined behavior, obsoleted by std::unique_ptr, not wanting to break the million C programs of the past 50 years?\r\n\r\nIt’s too late to change that anyway.","body_html":"<p>Too low level, implementation specific, undefined behavior, obsoleted by std::unique_ptr, not wanting to break the million C programs of the past 50 years?</p>\n<p>It’s too late to change that anyway.</p>\n","created_utc":1599424877,"downvotes":0,"edited_utc":0,"fullname":"t3_agsk","guild":{"banner_url":"https://i.ruqqus.com/board/programming/banner-17.png","color":"#044966","created_utc":1582928650,"description":"Back-end to front-end.\n\n---\nRelated guilds:\n\n+Webdev\n\n+Privacy\n\n+MachineLearning\n\n+Productivity\n\n+OpenSource","description_html":"<p>Back-end to front-end.</p>\n<hr/>\n<p>Related guilds:</p>\n<p><a href=\"/+Webdev\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Webdev/pic/profile\"/>+Webdev</a></p>\n<p><a href=\"/+Privacy\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Privacy/pic/profile\"/>+Privacy</a></p>\n<p><a href=\"/+MachineLearning\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+MachineLearning/pic/profile\"/>+MachineLearning</a></p>\n<p><a href=\"/+Productivity\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+Productivity/pic/profile\"/>+Productivity</a></p>\n<p><a href=\"/+OpenSource\"><img class=\"profile-pic-20 align-middle mr-1\" src=\"/+OpenSource/pic/profile\"/>+OpenSource</a></p>\n","disallowbots":false,"fullname":"t4_3i","id":"3i","is_banned":false,"is_private":false,"is_restricted":false,"is_siege_protected":false,"name":"Programming","over_18":false,"permalink":"/+Programming","profile_url":"https://i.ruqqus.com/board/programming/profile-10.png"},"guild_id":"3i","herald_guild":null,"id":"agsk","is_archived":true,"is_banned":false,"is_bot":false,"is_deleted":false,"is_distinguished":false,"is_heralded":false,"is_nsfl":false,"is_nsfw":false,"is_offensive":false,"level":1,"permalink":"/+Programming/post/30m4/why-isnt-restrict-the-default-for/agsk","post":{"author_name":"CrystalVulpine","award_count":0,"body":"In C, the `restrict` keyword (and others such as `__restrict` by compiler extensions) indicates that a pointer doesn't alias with another, and as such it doesn't have to reload the value from memory every single time it's referenced.\r\n\r\nHowever, given that having aliasing/overlapping pointers is quite rare, I find myself marking nearly every pointer with `__restrict`. Instead, why not just have the restrict behavior by default, and an \"unrestrict\" qualifier in case pointers could alias? Better yet, specify *which* pointer(s) it could alias with, so they only have to reload the values with respect to each other?","body_html":"<p>In C, the <code>restrict</code> keyword (and others such as <code>__restrict</code> by compiler extensions) indicates that a pointer doesn't alias with another, and as such it doesn't have to reload the value from memory every single time it's referenced.</p>\n<p>However, given that having aliasing/overlapping pointers is quite rare, I find myself marking nearly every pointer with <code>__restrict</code>. Instead, why not just have the restrict behavior by default, and an \"unrestrict\" qualifier in case pointers could alias? Better yet, specify <em>which</em> pointer(s) it could alias with, so they only have to reload the values with respect to each other?</p>\n","comment_count":1,"created_utc":1599401096,"domain":"text post","downvotes":0,"edited_utc":0,"fullname":"t2_30m4","guild_id":"3i","guild_name":"Programming","herald_guild":null,"id":"30m4","is_archived":true,"is_banned":false,"is_bot":false,"is_crosspost":false,"is_deleted":false,"is_distinguished":false,"is_heralded":false,"is_nsfl":false,"is_nsfw":false,"is_offensive":false,"is_pinned":false,"meta_description":null,"meta_title":null,"original_guild_id":null,"original_guild_name":null,"permalink":"/+Programming/post/30m4/why-isnt-restrict-the-default-for","score":1,"thumb_url":null,"title":"Why isn't restrict the default for pointers?","upvotes":1,"url":""},"post_id":"30m4","score":2,"upvotes":2,"voted":0}
